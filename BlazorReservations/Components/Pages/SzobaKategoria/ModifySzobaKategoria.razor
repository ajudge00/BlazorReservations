@page "/szobak/kategoriak/modosit/{id:int}"
@inject ISzobaRepository SzobaRepo
@inject IValidationService Validation
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>
    Kategória módosítása
</PageTitle>

<a class="btn btn-primary" href="/szobak/kategoriak">
    <Icon Type="return" /> Mégse
</a>

<div class="row justify-content-center mt-5">
    <div class="col-6">
        @if (Kategoria is not null)
        {
            <EditForm FormName="UpdateKategoriaForm" Model="Kategoria" OnValidSubmit="UpdateKategoria" autocomplete="off">
                <h3>Kategória módosítása</h3>
                <input type="hidden" name="Kategoria.Id" value="@Kategoria.Id" />
                <div class="mb-3">
                    <label for="megnev">Megnevezés:</label>
                    <InputText id="megnev" @bind-Value="Kategoria.Megnevezes" class="form-control mb-3" />
                    <label for="egysegar">Egységár (HUF/fő/éjszaka):</label>
                    <InputNumber id="egysegar" @bind-Value="Kategoria.EgysegAr" class="form-control mb-3" />
                </div>
                <div class="mb-3">
                    <button class="btn btn-success">Mentés</button>
                </div>
                <DataAnnotationsValidator />
                <FormWarningsDisplay FormWarnings="FormWarnings" />
            </EditForm>
        }
        else
        {
            <p>Nincs ilyen kategória.</p>
        }
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    public SzobaKategoria? Kategoria { get; set; }
    private List<string> FormWarnings = new();

    protected override async Task OnInitializedAsync()
    {
        Kategoria ??= await SzobaRepo.ReadKategoriaByIdAsync(Id);
    }

    private async Task UpdateKategoria()
    {
        if (Kategoria is not null)
        {
            FormWarnings = await Validation.IsSzobaKategoriaValid(Kategoria);

            if (!FormWarnings.Any())
            {
                await SzobaRepo.UpdateKategoriaAsync(Kategoria);
                Navigation.NavigateTo("/szobak/kategoriak");
            }

            return;
        }
    }
}
