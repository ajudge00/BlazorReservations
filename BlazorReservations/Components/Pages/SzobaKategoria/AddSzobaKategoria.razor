@page "/szobak/kategoriak/uj"
@inject ISzobaRepository SzobaRepo
@inject IValidationService Validation
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>
    Új szobakategória
</PageTitle>

<a class="btn btn-primary" href="/szobak/kategoriak">
    <Icon Type="return" /> Mégse
</a>

<div class="row justify-content-center mt-5">
    <div class="col-6">
        <EditForm FormName="CreateKategoriaForm" Model="Kategoria" OnValidSubmit="CreateKategoria" autocomplete="off">
            <h3>Új kategória</h3>
            <div class="mb-3">
                <label for="megnev">Megnevezés:</label>
                <InputText id="megnev" @bind-Value="Kategoria.Megnevezes" class="form-control" />
            </div>
            <div class="mb-3">
                <label for="egysegar">Egységár (HUF/fő/éjszaka):</label>
                <InputNumber id="egysegar" @bind-Value="Kategoria.EgysegAr" class="form-control" />
            </div>
            <div class="mb-3">
                <button type="submit" class="btn btn-success">Mentés</button>
            </div>
            <DataAnnotationsValidator />
            <FormWarningsDisplay FormWarnings="FormWarnings" />
        </EditForm>
    </div>
</div>


@code {
    [SupplyParameterFromForm]
    public SzobaKategoria Kategoria { get; set; } = new();
    private List<string> FormWarnings = new();

    private async Task CreateKategoria()
    {
        FormWarnings = await Validation.IsSzobaKategoriaValid(Kategoria);

        if (!FormWarnings.Any())
        {
            await SzobaRepo.CreateKategoriaAsync(Kategoria);
            Navigation.NavigateTo("/szobak/kategoriak");
        }

        return;

    }
}
