@page "/vendegek/uj"
@inject IVendegRepository VendegRepo
@inject IValidationService Validation
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>
    Új vendég
</PageTitle>

<a class="btn btn-primary" href="/vendegek">
    <Icon Type="return"/> Mégse
</a>

<div class="row justify-content-center mt-5">
    <div class="col-6">
        <EditForm FormName="CreateVendegForm" Model="Vendeg" OnValidSubmit="CreateVendeg" autocomplete="off">
            <h3>Új vendég</h3>
            <div class="mb-3">
                <label for="nev">Név:</label>
                <InputText id="nev" @bind-Value="Vendeg.Nev" class="form-control mb-3" />
                <label for="szuletett">Született:</label>
                <InputDate id="szuletett" @bind-Value="Vendeg.Szuletett" class="form-control mb-3" />
            </div>
            <div class="mb-3">
                <button class="btn btn-success">Mentés</button>
            </div>
            <DataAnnotationsValidator />
            <FormWarningsDisplay FormWarnings="FormWarnings"/>
        </EditForm>
    </div>
</div>


@code {
    public Vendeg Vendeg { get; set; } = new();
    private List<string> FormWarnings = new();

    private async Task CreateVendeg()
    {
        FormWarnings = Validation.IsVendegValid(Vendeg);

        if (!FormWarnings.Any())
        {
            await VendegRepo.CreateAsync(Vendeg);
            Navigation.NavigateTo("/vendegek");
        }

        return;
    }
}
