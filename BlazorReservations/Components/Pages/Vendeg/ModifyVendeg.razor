@page "/vendegek/modosit/{id:int}"
@inject IVendegRepository VendegRepo
@inject IValidationService Validation
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>
    Vendég módosítása
</PageTitle>

<a class="btn btn-primary" href="/vendegek">
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-return-left" viewBox="0 0 16 16">
        <path fill-rule="evenodd" d="M14.5 1.5a.5.5 0 0 1 .5.5v4.8a2.5 2.5 0 0 1-2.5 2.5H2.707l3.347 3.346a.5.5 0 0 1-.708.708l-4.2-4.2a.5.5 0 0 1 0-.708l4-4a.5.5 0 1 1 .708.708L2.707 8.3H12.5A1.5 1.5 0 0 0 14 6.8V2a.5.5 0 0 1 .5-.5" />
    </svg> Mégse
</a>

<div class="row justify-content-center mt-5">
    <div class="col-6">
    @if(Vendeg is not null)
    {
        <EditForm FormName="UpdateVendegForm" Model="Vendeg" OnValidSubmit="UpdateVendeg" autocomplete="off">
            <h3>Vendég módosítása</h3>
            <input type="hidden" name="Vendeg.Id" value="@Vendeg.Id"/>
            <div class="mb-3">
                <label for="nev">Név:</label>
                <InputText id="nev" @bind-Value="Vendeg.Nev" class="form-control mb-3" />
                <label for="szuletett">Született:</label>
                <InputDate id="szuletett" @bind-Value="Vendeg.Szuletett" class="form-control mb-3" />
            </div>
            <div class="mb-3">
                <button class="btn btn-success ">Mentés</button>
            </div>
            <DataAnnotationsValidator />
            <FormWarningsDisplay FormWarnings="FormWarnings"/>
        </EditForm>
    } else
    {
        <p>Nincs ilyen vendég.</p>
    }
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    public Vendeg? Vendeg { get; set; }
    private List<string> FormWarnings = new();

    protected override async Task OnInitializedAsync()
    {
        Vendeg ??= await VendegRepo.ReadByIdAsync(Id);
    }

    private async Task UpdateVendeg()
    {
        FormWarnings = Validation.IsVendegValid(Vendeg);

        if (!FormWarnings.Any())
        {
            await VendegRepo.UpdateAsync(Vendeg);
            Navigation.NavigateTo("/vendegek");
        }
    }
}
