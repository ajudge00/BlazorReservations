@page "/szobak/uj"
@inject ISzobaRepository SzobaRepo
@inject NavigationManager Navigation
@inject IValidationService Validation

<PageTitle>
    Új szoba
</PageTitle>

<a class="btn btn-primary" href="/szobak">
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-return-left" viewBox="0 0 16 16">
        <path fill-rule="evenodd" d="M14.5 1.5a.5.5 0 0 1 .5.5v4.8a2.5 2.5 0 0 1-2.5 2.5H2.707l3.347 3.346a.5.5 0 0 1-.708.708l-4.2-4.2a.5.5 0 0 1 0-.708l4-4a.5.5 0 1 1 .708.708L2.707 8.3H12.5A1.5 1.5 0 0 0 14 6.8V2a.5.5 0 0 1 .5-.5" />
    </svg> Mégse
</a>

<div class="row justify-content-center mt-5">
    <div class="col-6">
        <EditForm Enhance="true" method="post" FormName="CreateSzobaForm" Model="Szoba" OnValidSubmit="CreateSzoba" autocomplete="off">
            <h3>Új szoba</h3>
            <div class="mb-3">
                <label for="szobaszam">Szobaszám:</label>
                <InputNumber id="szobaszam" @bind-Value="Szoba.SzobaSzam" class="form-control mb-3" />
                <label for="agyakszama">Ágyak száma:</label>
                <InputNumber id="agyakszama" @bind-Value="Szoba.AgyakSzama" class="form-control mb-3" />
                <label for="kategoria">Kategória</label>
                <InputSelect id="kategoria" class="form-control form-select" @bind-Value="Szoba.KategoriaId" disabled="@KategoriaSelectIsDisabled">
                    @if(KategoriaSelectIsDisabled)
                    {
                        <option>Nincsenek kategóriák</option>
                    }else
                    {
                        @foreach (var kat in Kategoriak)
                        {
                            <option value="@kat.Id">@kat.Megnevezes</option>
                        }
                    }
                </InputSelect>
            </div>
            <div class="mb-3">
                <button class="btn btn-success">Mentés</button>
            </div>
            <DataAnnotationsValidator />
            <FormWarningsDisplay FormWarnings="FormWarnings"/>
        </EditForm>
    </div>
</div>


@code {
    [SupplyParameterFromForm]
    public Szoba Szoba { get; set; } = new();
    public List<SzobaKategoria> Kategoriak { get; set; } = new();
    public bool KategoriaSelectIsDisabled = true;

    private List<string> FormWarnings = new();

    protected override async Task OnInitializedAsync()
    {
        Kategoriak = await SzobaRepo.ReadKategoriaAllAsync();
        if(Kategoriak is not null && Kategoriak.Count != 0)
        {
            KategoriaSelectIsDisabled = false;
        }
    }

    private async Task CreateSzoba()
    {
        FormWarnings = Validation.IsSzobaValid(Szoba);

        if (!FormWarnings.Any())
        {
            await SzobaRepo.CreateAsync(Szoba);
            Navigation.NavigateTo("/szobak");
        }

        return;
    }
}
